{
  "hash": "f861374f7ebba680cc25eed5a4383070",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Workshop\"\nsubtitle: \"Summarising data in with several variables and the role of variables in analysis\"\ntoc: true\ntoc-location: right\n---\n\n\n\n# Introduction\n\n![Data data Artwork from the Openscapes blog Tidy Data for\nreproducibility, efficiency, and collaboration by Julia Lowndes and\nAllison\nHorst](images/ggplot2_masterpiece.png){fig-alt=\"Stylized text providing an overview of Tidy Data. The top reads 'Tidy data is a standard way of mapping the meaning of a dataset to its structure. - Hadley Wickham.' On the left reads 'In tidy data: each variable forms a column; each observation forms a row; each cell is a single measurement.' There is an example table on the lower right with columns ‘id’, ‘name’ and ‘color’ with observations for different cats, illustrating tidy data structure.\"}\n\n## Session overview\n\nIn this workshop you will learn to summarise and plot datasets with more\nthan one variable and how to write figures to files. You will also get\nmore practice with working directories, importing data, formatting\nfigures and the pipe.\n\n## Philosophy\n\nWorkshops are not a test. It is expected that you often don't know how\nto start , make a lot of mistakes and need help. It is expected that you\nare familiar with independent study content before the workshop.\nHowever, you need not remember or understand every detail as the\nworkshop should build and consolidate your understanding. Tips\n\n-   don't worry about making mistakes\n-   don't let what you can not do interfere with what you can do\n-   discussing code with your neighbours will help\n-   look things up in the independent study material\n-   look things up in your own code from earlier workshops\n-   there are no stupid questions\n\n::: callout-note\n## Key\n\nThese four symbols are used at the beginning of each instruction so you\nknow where to carry out the instruction.\n\n![](images/do_on_your_computer.png) Something you need to do on your\ncomputer. It may be opening programs or documents or locating a file.\n\n![](images/do_in_R.png) Something you should do in RStudio. It will\noften be typing a command or using the menus but might also be creating\nfolders, locating or moving files.\n\n![](images/do_on_internet.png) Something you should do in your browser\non the internet. It may be searching for information, going to the VLE\nor downloading a file.\n\n![](images/answer.png) A question for you to think about and answer.\nRecord your answers in your script for future reference.\n:::\n\n# Getting started\n\n![](images/do_on_your_computer.png) Start RStudio from the Start menu.\n\n![](images/do_in_R.png) Make an RStudio project for this workshop by\nclicking on the drop-down menu on top right where it says\n`Project: (None)` and choosing New Project, then New Directory, then New\nProject. Navigate to the `data-analysis-in-r-1` folder and name the\nRStudio Project 'week-4'.\n\n![](images/do_in_R.png) Make a new folder called `data-raw`. You can do\nthis on the Files Pane by clicking New Folder and typing into the box\nthat appears.\n\n![](images/do_in_R.png) Make a new script then save it with a name like\n`summarise-plot-data-with-several-vars.R` to carry out the rest of the\nwork.\n\n![](images/do_in_R.png) Add a comment to the script:\n`# Summarising data in      with several variables and the role of variables in analysis`\n\n![](images/do_in_R.png) Add code to load the **`tidyverse`** package\n[@tidyverse]\n\n# Exercises\n\nThe [Independent Study to prepare for\nworkshop](study_before_workshop.qmd) explained how to summarise and plot\na dataset containing one continuous response and one nominal explanatory\nvariable with two groups.\n\nHere you are going to learn how to summarise the following types of data\nset:\n\n-   one continuous response and one nominal explanatory variable with\n    three groups: myoglobin concentration in seal species\n-   one continuous response and one nominal explanatory variable with\n    two groups *but* the supplied data first need converting to tidy\n    format: interorbital width in pigeons from two populations\n-   two continuous variables: ulna length and height in humans\n\nYou should start to notice how similar the code is for all of these and\nalso where they differ.\n\n## Data already tidy: Myoglobin in seal muscle\n\nThe myoglobin concentration of skeletal muscle of three species of seal\nin grams per kilogram of muscle was determined and the data are given in\n[seal.csv](data-raw/seal.csv). Each row represents an individual seal.\nThe first column gives the myoglobin concentration and the second column\nindicates species.\n\n### Import\n\n![](images/do_on_your_computer.png) Save [seal.csv](data-raw/seal.csv)\nto your `data-raw` folder.\n\nIn the next step you will import the daya and I suggest you look up data\nimport from last week. There are two ways you could do that.\n\n1.  Open your own script from last week. You do not need to open the\n    `week-8` RStudio Project itself - you can open the script you used\n    by navigating to through the File pane. After you have found it and\n    clicked on it to open, I suggest showing your working directory in\n    your File Pane again. You can do that by clicking on the little\n    arrow at the end of the path printed on the Console window.\n\n2.  Go the the [workshop page from last\n    week](../week-3/workshop.html#importing-data-from-files){target=\"_blank\"}.\n\n![](images/do_in_R.png) Read the data into a dataframe called `seal`.\n\n\n\n![](images/answer.png) What types of variables do you have in the `seal`\ndataframe? What role would you expect them to play in analysis?\n\n<!-- #---THINKING ANSWER--- -->\n\n<!-- there are two variables: `myoglobin` is the response and is continuous -->\n\n<!-- and `species` is explanatory. `species` is categorical with three  -->\n\n<!-- levels (groups). -->\n\nThe key point here is that the fundamental structure of:\n\n-   one continuous response and one nominal explanatory variable with\n    two groups ([adipocytes](data-raw/adipocytes.txt)), and\n\n-   one continuous response and one nominal explanatory variable with\n    three groups ([seals](data-raw/seal.csv))\n\nis the same! The only thing that differs is the number of groups (the\nnumber of values in the nominal variable). This means the code for\nsummarising and plotting is *identical* except for the variable names!\n\n::: callout-tip\n## Tip\n\nWhen two datasets have the same number of columns and the response\nvariable and the explanatory variables have the same data types then the\ncode you need is the same.\n:::\n\n### Summarise\n\nSummarising the data for each species is the next sensible step. The\nmost useful summary statistics for a continuous variable like\n`myoglobin` are:\n\n-   mean\n-   standard deviation\n-   sample size\n-   standard error\n\nWe *can* get those for the whole `myoglobin` column, like we did for the\n[`FSA` column in the cells dataset last\nweek](../week-3/workshop.html#cells). However, it is likely to be more\nuseful to summarise `myoglobin` separately for each seal species. We can\nachieve this using `group_by()` before `summarise()`.\n\n![](images/do_in_R.png) Create a data frame called `seal_summary`[^1]\nthat contains the means, standard deviations, sample sizes and standard\nerrors for each of the seal species:\n\n[^1]: \"Create a dataframe called `seal_summary`\" means assign the output\n    of the `group_by()` and `summarise()` code to something called\n    `seal_summary`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseal_summary <- seal |> \n  group_by(species) |> \n  summarise(mean = mean(myoglobin),\n            std = sd(myoglobin),\n            n = length(myoglobin),\n            se = std/sqrt(n))\n```\n:::\n\n\nYou should get the following numbers:\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> species </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> std </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Bladdernose Seal </td>\n   <td style=\"text-align:right;\"> 42.31600 </td>\n   <td style=\"text-align:right;\"> 8.020634 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 1.464361 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Harbour Seal </td>\n   <td style=\"text-align:right;\"> 49.01033 </td>\n   <td style=\"text-align:right;\"> 8.252004 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 1.506603 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Weddell Seal </td>\n   <td style=\"text-align:right;\"> 44.66033 </td>\n   <td style=\"text-align:right;\"> 7.849816 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 1.433174 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n### Visualise\n\nMost commonly, we put the explanatory variable on the *x* axis and the\nresponse variable on the *y* axis. A continuous response, particularly\none that follows the normal distribution, is best summarised with the\nmean and the standard error. In my opinion, you should also show **all**\nthe raw data points wherever possible.\n\nWe are going to create a figure like this:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-5-1.png){width=4200}\n:::\n:::\n\n\nIn this figure, we have two dataframes:\n\n-   the `seal` dataframe which contains the raw data points\n-   the `seal_summary` dataframe which contains the means and standard\n    errors.\n\nSo far we have plotted just one dataframe on a figure and we have\nspecified the dataframe to be plotted and the columns to plot *inside*\nthe `ggplot()` command. For examples:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# YOU DO NOT NEED TO RUN THIS CODE\n# It is here to remind you that so far we have specified a single dataframe\n# to be plotted and did this by specifying the dataframe to be plotted and\n# the columns to plot INSIDE the `ggplot()` command\n# For a boxplot ...\nggplot(cats, \n       aes(x = reorder(coat, mass), y = mass)) +\n  geom_boxplot(fill = \"darkcyan\") +\n  scale_x_discrete(name = \"Coat colour\") +\n  scale_y_continuous(name = \"Mass (kg)\", \n                     expand = c(0, 0),\n                     limits = c(0, 8)) +\n  theme_classic()\n```\n:::\n\n\nOr\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# YOU DO NOT NEED TO RUN THIS CODE\n# ... and for a histogram\nggplot(fly_bristles_means, aes(x = mean_count)) +\n  geom_histogram(bins = 10, \n                 colour = \"black\",\n                 fill = \"skyblue\") +\n  scale_x_continuous(name = \"Number of bristles\",\n                     expand = c(0, 0)) +\n  scale_y_continuous(name = \"Frequency\",\n                     expand = c(0, 0),\n                     limits = c(0, 35)) +\n  theme_classic()\n```\n:::\n\n\nHere you will learn that dataframes and aesthetics can be specified\n*within a `geom_xxxx`* rather than within `ggplot()`. This is very\nuseful if the geom only applies to some of the data you want to plot.\n\n::: callout-tip\n## Tip: `ggplot()`\n\nYou put the `data` argument and `aes()` inside `ggplot()` if you want\nall the `geoms` to use that dataframe and variables. If you want a\ndifferent dataframe for a `geom`, put the `data` argument and `aes()`\ninside the `geom_xxxx()`\n:::\n\nI will build the plot up in small steps **but you should edit your\n*existing*`ggplot()` command as we go.**\n\n![](images/do_in_R.png) Plot the raw data points first:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(data = seal, \n             aes(x = species, y = myoglobin))\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-8-1.png){width=4200}\n:::\n:::\n\n\nNotice:\n\n-   `geom_point()` is the geom to plot points\n\n-   we have given the data argument and the aesthetics inside the geom.\n\n-   the variables given in the aes(), `species` and `myoglobin`, are\n    columns in the dataframe, `seal`, given in the data argument.\n\n![](images/do_in_R.png) We can ensure the points do not overlap, by\nadding some random jitter in the *x* direction (edit your existing\ncode):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(data = seal, \n             aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0))\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-9-1.png){width=4200}\n:::\n:::\n\n\nNotice:\n\n-   `position = position_jitter(width = 0.1, height = 0)` is inside the\n    `geom_point()` parentheses, *after* the `aes()` and a comma.\n\n-   We've set the vertical jitter to 0 because, in contrast to the\n    categorical *x*-axis, movement on the *y*-axis has meaning (the\n    myoglobin levels).\n\nNow to add the errorbars. These go from one standard error below the\nmean to one standard error above the mean.\n\n![](images/do_in_R.png) Add a `geom_errorbar()` for errorbars (edit your\nexisting code):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(data = seal, aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0)) +\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean - se, ymax = mean + se),\n                width = 0.3) \n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-10-1.png){width=4200}\n:::\n:::\n\n\nNotice:\n\n-   `geom_errorbar()` is the geom to plot error bars\n\n-   we have given the data argument and the aesthetics inside the geom.\n\n-   the variables given in the aes(), `species`, `mean` and `se`, are\n    columns in the dataframe, `seal_summary`, given in the data\n    argument.\n\nWe would like to add the mean. You could use `geom_point()` but I like\nto use another `geom_errorbar()` to get a line by setting `ymin` and\n`ymax` to the mean.\n\n![](images/do_in_R.png) Add a `geom_errorbar()` for the mean (edit your\nexisting code):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  # raw data\n  geom_point(data = seal, aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0)) +\n  # error bars\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean - se, ymax = mean + se),\n                width = 0.3) +\n  # line for the mean\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean, ymax = mean),\n                width = 0.2)\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-11-1.png){width=4200}\n:::\n:::\n\n\n![](images/do_in_R.png) Alter the axis labels and limits using\n`scale_y_continuous()` and `scale_x_discrete()` (edit your existing\ncode):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  # raw data\n  geom_point(data = seal, aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0)) +\n  # error bars\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean - se, ymax = mean + se),\n                width = 0.3) +\n  # line for the mean\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean, ymax = mean),\n                width = 0.2) +\n  scale_y_continuous(name = \"Myoglobin (g/kg)\", \n                     limits = c(0, 80), \n                     expand = c(0, 0)) +\n  scale_x_discrete(name = \"Species\")\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-12-1.png){width=4200}\n:::\n:::\n\n\nYou only need to use name in `scale_y_continuous()` and\n`scale_x_discrete()` to use labels that are different from those in the\ndataset. Often this is to use proper terminology and captialisation.\n\n![](images/do_in_R.png) Format the figure in a way that is more suitable\nfor including in a report using `theme_classic()` (edit your existing\ncode):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  # raw data\n  geom_point(data = seal, aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0)) +\n  # error bars\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean - se, ymax = mean + se),\n                width = 0.3) +\n  # line for the mean\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean, ymax = mean),\n                width = 0.2) +\n  scale_y_continuous(name = \"Myoglobin (g/kg)\", \n                     limits = c(0, 80), \n                     expand = c(0, 0)) +\n   scale_x_discrete(name = \"Species\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-13-1.png){width=4200}\n:::\n:::\n\n\n### Writing figures to file\n\nIt is a good idea to save figures to files so that you can include them\nin reports. By scripting figures saving you can ensure your work is\nreproducible. It means you can regenerate the figures identically if you\nchange the data or exactly match figures in size. Aim to save figures\nthe size they will appear in a report - that way the fonts and line\nwidths will be appropriate. If you need a high resolution figure, you\ncan save it larger than needed then scale it down in the report. Doing\nthat will require you to make changes to font sizes and line widths to\nmake them appropriate when scaled down.\n\n![](images/do_in_R.png) First make a new folder called `figures`.\n\n![](images/do_in_R.png) Now edit your ggplot code so that you assign the\nfigure to a variable which you use use in the `ggsave()` command next.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsealfig <- ggplot() +\n  # raw data\n  geom_point(data = seal, aes(x = species, y = myoglobin),\n             position = position_jitter(width = 0.1, height = 0)) +\n  # error bars\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean - se, ymax = mean + se),\n                width = 0.3) +\n  # line for the mean\n  geom_errorbar(data = seal_summary, \n                aes(x = species, ymin = mean, ymax = mean),\n                width = 0.2) +\n  scale_y_continuous(name = \"Myoglobin (g/kg)\", \n                     limits = c(0, 80), \n                     expand = c(0, 0)) +\n  scale_x_discrete(name = \"Species\") +\n  theme_classic()\n```\n:::\n\n\nThe figure won't be shown in the Plots tab - the output has gone into\n`sealfig` rather than to the Plots tab. To make it appear in the Plots\ntab type `sealfig`.\n\n![](images/do_in_R.png) The `ggsave()` command will write a ggplot\nfigure to a file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"figures/seal-muscle.png\",\n       plot = sealfig,\n       device = \"png\",\n       width = 4,\n       height = 3,\n       units = \"in\",\n       dpi = 300)\n```\n:::\n\n\n`figures/seal-muscle.png` is the name of the file, including the\nrelative path.\n\n![](images/do_in_R.png) Look up `ggsave()` in the manual to understand\nthe arguments. You can do this by putting your cursor on the command and\npressing F1\n\n## Data needs tidying: Pigeons\n\nThe data in [pigeon.txt](data-raw/pigeon.txt) are 40 measurements of\ninterorbital width (in mm) for two populations of domestic pigeons\nmeasured to the nearest 0.1mm\n\n![Interorbital width is the distance between the\neyes](images/interorbital.png){fig-alt=\"Photo of a domestic pigeon, head on,  \nwith an arrow showing the distance between the eyes.\"}\n\n### Import\n\n![](images/do_on_your_computer.png) Save\n[pigeon.txt](data-raw/pigeon.txt) to your `data-raw` folder\n\n![](images/do_in_R.png) Read the data into a dataframe called `pigeons`.\n\n\n\n![](images/answer.png) What variables are there in the `pigeons`\ndataframe?\n\n<!-- #---THINKING ANSWER--- -->\n\n<!-- This is not obvious - there are two columns called A and B. -->\n\n<!-- Both seem to contain contain continuous values, presumably the interorbital -->\n\n<!-- distances. The A and B seem to be the names of the populations -->\n\nHummmm, these data are not organised like the other data sets we have\nused. The population is given as the column names and the interorbital\ndistances for one population are given in a different column than those\nfor the other population. The first row has data from two pigeons which\nhave nothing in common, they just happen to be the first individual\nrecorded in each population.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:200px; \"><table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> A </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> B </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 12.4 </td>\n   <td style=\"text-align:right;\"> 12.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.2 </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.6 </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.3 </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.8 </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.7 </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.3 </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.6 </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.3 </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.5 </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.1 </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.4 </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.8 </td>\n   <td style=\"text-align:right;\"> 11.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.9 </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.9 </td>\n   <td style=\"text-align:right;\"> 12.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.8 </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.4 </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.0 </td>\n   <td style=\"text-align:right;\"> 12.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.7 </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.3 </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.5 </td>\n   <td style=\"text-align:right;\"> 12.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.8 </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.3 </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.3 </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.5 </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.7 </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.3 </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.6 </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13.3 </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.7 </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.1 </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.2 </td>\n   <td style=\"text-align:right;\"> 12.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.8 </td>\n   <td style=\"text-align:right;\"> 11.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.4 </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.9 </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.3 </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.4 </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10.0 </td>\n   <td style=\"text-align:right;\"> 12.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.2 </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11.3 </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\nThis data is not in 'tidy' format [@Wickham2014-nl].\n\nTidy format has variables in column and observations in rows. All of \nthe distance measurements should be in one column and a second column\nshould give the population.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:200px; \"><table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> population </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> distance </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 13.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 10.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 12.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 11.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 11.1 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\nData which is in tidy format is easier to summarise, analyses and plot\nbecause the organisation matches the conceptual structure of the data:\n\n-   it is more obvious what the variables are because they columns are\n    named with them - in the untidy format, that the measures are\n    distances is not clear and what A and B are isn't clear\n-   it is more obvious that there is no relationship between any of the\n    pigeons except for population\n-   functions are designed to work with variables in columns\n\n### Tidying data\n\nWe can put this data in such a format with the `pivot_longer()` function\nfrom the `tidyverse`:\n\n`pivot_longer()` collects the values from specified columns (`cols`)\ninto a single column (`values_to`) and creates a column to indicate the\ngroup (`names_to`).\n\n![](images/do_in_R.png) Put the data in tidy format:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npigeons <- pivot_longer(data = pigeons, \n                        cols = everything(), \n                        names_to = \"population\", \n                        values_to = \"distance\")\n```\n:::\n\n\nWe have overwritten the original dataframe. If you wanted to keep the\noriginal you would need to give a new name on the left side of the\nassignment `<-` Note: the actual data in the file are unchanged, only\nthe dataframe in R is changed.\n\n## Ulna and height\n\nThe datasets we have used up to this point, have had a continuous\nvariable and a categorical variable where it makes sense to summarise\nthe response for each of the different groups in the categorical\nvariable and plot the response on the *y*-axis. We will now summarise a\ndataset with two continuous variables. The data in\n[height.txt](data-raw/height.txt) are the ulna length (cm) and height\n(m) of 30 people. In this case, it is more appropriate to summarise both\nof thee variables and to plot them as a scatter plot.\n\nWe will use `summarise()` again but we do not need the `group_by()`\nfunction this time. We will also need to use each of the summary\nfunctions, such as `mean()`, twice, once for each variable.\n\n### Import\n\n![](images/do_on_your_computer.png) Save\n[height.txt](data-raw/height.txt) to your `data-raw` folder\n\n![](images/do_in_R.png) Read the data into a dataframe called\n`ulna_heights`.\n\n\n\n### Summarise\n\n![](images/do_in_R.png) Create a data frame called\n`ulna_heights_summary` that contains the sample size and means, standard\ndeviations and standard errors for both variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nulna_heights_summary <- ulna_heights |> \n  summarise(n = length(ulna),\n            mean_ulna = mean(ulna),\n            std_ulna = sd(ulna),\n            se_ulna = std_ulna/sqrt(n),\n            mean_height = mean(height),\n            std_height = sd(height),\n            se_height = std_height/sqrt(n))\n```\n:::\n\n\nYou should get the following numbers:\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean_ulna </th>\n   <th style=\"text-align:right;\"> std_ulna </th>\n   <th style=\"text-align:right;\"> se_ulna </th>\n   <th style=\"text-align:right;\"> mean_height </th>\n   <th style=\"text-align:right;\"> std_height </th>\n   <th style=\"text-align:right;\"> se_height </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 24.72 </td>\n   <td style=\"text-align:right;\"> 4.137332 </td>\n   <td style=\"text-align:right;\"> 0.75537 </td>\n   <td style=\"text-align:right;\"> 1.494 </td>\n   <td style=\"text-align:right;\"> 0.2404823 </td>\n   <td style=\"text-align:right;\"> 0.0439059 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n### Visualise\n\nTo plot make a scatter plot we need to use `geom_point()` again but\nwithout any scatter. In this case, it does not really matter which\nvariable is on the *x*-axis and which is on the *y*-axis.\n\n![](images/do_in_R.png) Make a simple scatter plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ulna_heights, aes(x = ulna, y = height)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](workshop_files/figure-html/unnamed-chunk-23-1.png){width=4200}\n:::\n:::\n\n\nIf you have time, you may want to format the figure more appropriately.\n\n\n::: {.cell}\n\n:::\n\n\n## Look after future you!\n\nFuture you is going to summarise and plot data from other modules. You can \nmake this much easier by documenting what you have done now. Go through \nyour script (`summarise-plot-data-with-several-vars.R`) and remove code \nthat you do not need. Add comments to the code you do need to explain \nwhat it does.\n\n<!-- Here is an example: [seals-analysis.R](assets/seals-analysis.R).  -->\n\n<!-- You may wish to comment your version much more. -->\n\nYou're finished!\n\n# 🥳 Well Done! 🎉\n\n![Illustrations from the Openscapes blog Tidy Data for reproducibility,\nefficiency, and collaboration by Julia Lowndes and Allison\nHorst](images/tidy-data.jpg){fig-alt=\"Stylized text providing an overview of Tidy Data. The top reads 'Tidy data is a standard way of mapping the meaning of a dataset to its structure. - Hadley Wickham.' On the left reads 'In tidy data: each variable forms a column; each observation forms a row; each cell is a single measurement.' There is an example table on the lower right with columns ‘id’, ‘name’ and ‘color’ with observations for different cats, illustrating tidy data structure\"}\n\n# Independent study following the workshop\n\n[Consolidate](study_after_workshop.qmd)\n\n# The Code file\n\nThis contains all the code needed in the workshop even where it is not\nvisible on the webpage.\n\nThe `workshop.qmd` file is the file I use to compile the practical. Qmd\nstands for Quarto markdown. It allows code and ordinary text to be\ninterweaved to produce well-formatted reports including webpages. View\nthe source code for this workshop using the `</> Code` button at the top\nof the page.\nCoding and thinking answers are marked with `#---CODING ANSWER---` and\n`#---THINKING ANSWER---`\n\nPages made with R [@R-core], Quarto [@allaire2022], `knitr` [@knitr1;\n@knitr2; @knitr3], `kableExtra` [@kableExtra]\n\n# References\n",
    "supporting": [
      "workshop_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}